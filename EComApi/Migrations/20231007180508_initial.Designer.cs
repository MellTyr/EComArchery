// <auto-generated />
using System;
using EComApi.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EComApi.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231007180508_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EComApi.Database.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("EComApi.Database.Models.PossibleAttrTypes.ChoiseAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AttributeType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ChoiseAttributes");
                });

            modelBuilder.Entity("EComApi.Database.Models.PossibleAttrTypes.PossibleValues.PossibleChoiseValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChoiseAttributeId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChoiseAttributeId");

                    b.ToTable("PossibleChoiseValue");
                });

            modelBuilder.Entity("EComApi.Database.Models.PossibleAttrTypes.TextAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AttributeType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TextAttributes");
                });

            modelBuilder.Entity("EComApi.Database.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EComApi.Database.Models.ProductValues.TextValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<int>("TextAttributeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TextAttributeId");

                    b.ToTable("TextValue");
                });

            modelBuilder.Entity("PossibleChoiseValueProduct", b =>
                {
                    b.Property<int>("ChoiseValuesId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductsId")
                        .HasColumnType("integer");

                    b.HasKey("ChoiseValuesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("PossibleChoiseValueProduct");
                });

            modelBuilder.Entity("EComApi.Database.Models.PossibleAttrTypes.PossibleValues.PossibleChoiseValue", b =>
                {
                    b.HasOne("EComApi.Database.Models.PossibleAttrTypes.ChoiseAttribute", "ChoiseAttribute")
                        .WithMany("Values")
                        .HasForeignKey("ChoiseAttributeId");

                    b.Navigation("ChoiseAttribute");
                });

            modelBuilder.Entity("EComApi.Database.Models.ProductValues.TextValue", b =>
                {
                    b.HasOne("EComApi.Database.Models.Product", "Product")
                        .WithMany("TextValues")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EComApi.Database.Models.PossibleAttrTypes.TextAttribute", "TextAttribute")
                        .WithMany("TextValues")
                        .HasForeignKey("TextAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("TextAttribute");
                });

            modelBuilder.Entity("PossibleChoiseValueProduct", b =>
                {
                    b.HasOne("EComApi.Database.Models.PossibleAttrTypes.PossibleValues.PossibleChoiseValue", null)
                        .WithMany()
                        .HasForeignKey("ChoiseValuesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EComApi.Database.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EComApi.Database.Models.PossibleAttrTypes.ChoiseAttribute", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("EComApi.Database.Models.PossibleAttrTypes.TextAttribute", b =>
                {
                    b.Navigation("TextValues");
                });

            modelBuilder.Entity("EComApi.Database.Models.Product", b =>
                {
                    b.Navigation("TextValues");
                });
#pragma warning restore 612, 618
        }
    }
}
